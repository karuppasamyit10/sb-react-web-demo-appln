{"ast":null,"code":"var _jsxFileName = \"E:\\\\sb-react-web-demo-appln\\\\react-web\\\\src\\\\components\\\\common\\\\login.js\";\nimport React, { Component } from \"react\";\nimport { Spinner } from \"react-activity\";\nimport \"react-activity/dist/react-activity.css\";\nimport { connect } from \"react-redux\";\nimport store from \"store\";\nimport { logInUser } from \"../../actions/userAction\";\nimport { Link } from 'react-router-dom';\nimport { PATH } from '../../utils/Constants';\nimport { showNotification } from \"../../actions/NotificationAction\";\n\nclass login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChange = e => {\n      let target = e.target;\n      let name = target.name,\n          value = target.value;\n      this.setState({\n        [name]: value\n      }, () => {\n        this.handleRemoveError();\n      });\n    };\n\n    this.handleRemoveError = () => {\n      let _this$state = this.state,\n          userName = _this$state.userName,\n          password = _this$state.password,\n          error = _this$state.error;\n\n      if (userName) {\n        this.userNameRef.current.classList.remove(\"error\");\n        error.userName = \"\";\n        this.setState({\n          error: error\n        });\n      }\n\n      if (password) {\n        this.passwordRef.current.classList.remove(\"error\");\n        error.password = \"\";\n        this.setState({\n          error: error\n        });\n      }\n    };\n\n    this.handleValidate = () => {\n      let _this$state2 = this.state,\n          userName = _this$state2.userName,\n          password = _this$state2.password,\n          error = _this$state2.error;\n\n      if (!userName) {\n        this.userNameRef.current.focus();\n        this.userNameRef.current.classList.add(\"error\");\n        error.userName = \"Enter user name\";\n        this.setState({\n          error: error\n        });\n        return false;\n      }\n\n      if (!password) {\n        this.passwordRef.current.focus();\n        this.passwordRef.current.classList.add(\"error\");\n        error.password = \"Enter Password\";\n        this.setState({\n          error: error\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.submit = () => {\n      console.log(this.state.userName, this.state.password);\n      let _this$state3 = this.state,\n          userName = _this$state3.userName,\n          password = _this$state3.password;\n      let submit = this.handleValidate();\n\n      if (submit) {\n        this.setState({\n          isdisable: true\n        });\n        this.loginFunctions(userName, password);\n      }\n    };\n\n    this.loginFunctions = (userName, password) => {\n      this.props.logInUser(userName, password, result => {\n        console.log(result);\n        this.setState({\n          isdisable: false\n        });\n\n        if (!result) {\n          this.props.showNotification(\"username or password wrong\", \"error\");\n        } else {\n          this.props.history.push(\"/dashboard\");\n        }\n      });\n    };\n\n    this.state = {\n      userName: \"ram\",\n      password: \"123\",\n      error: {\n        userName: \"\",\n        password: \"\"\n      },\n      token: {},\n      isdisable: false\n    };\n    this.userNameRef = React.createRef();\n    this.passwordRef = React.createRef();\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"custom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-10 col-sm-7 col-lg-5 login-bg-white login-sec\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-center\",\n      style: {\n        color: \"#555\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"ACCOUNT LOGIN\"), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      style: {\n        color: \"#555\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"USERNAME\"), React.createElement(\"input\", {\n      type: \"email\",\n      ref: this.userNameRef,\n      class: \"form-control\",\n      id: \"exampleInputEmail1\",\n      \"aria-describedby\": \"emailHelp\" // placeholder=\"enter username\"\n      ,\n      name: \"userName\",\n      value: this.state.userName,\n      onChange: e => {\n        this.handleOnChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.state.error[\"userName\"] ? this.state.error[\"userName\"] : \"\")), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputPassword1\",\n      style: {\n        color: \"#555\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"PASSWORD\"), React.createElement(\"input\", {\n      type: \"password\",\n      class: \"form-control\",\n      ref: this.passwordRef,\n      id: \"exampleInputPassword1\" // placeholder=\"enter password\"\n      ,\n      name: \"password\",\n      value: this.state.password,\n      onChange: e => {\n        this.handleOnChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, this.state.error[\"password\"] ? this.state.error[\"password\"] : \"\")), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.submit(),\n      className: \"btn btn-primary mt-5 text-center login100-form-btn\",\n      disabled: this.state.isdisable ? \"disabled\" : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.state.isdisable ? React.createElement(Spinner, {\n      color: \"#FFF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }) : null, \"Login\"))), React.createElement(\"div\", {\n      className: \"text-center mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: PATH.REGISTRATION,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Signup\"), \"|\", React.createElement(Link, {\n      to: PATH.REGISTRATION,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Forgot Password\"))))));\n  }\n\n}\n\nlogin.propTypes = {};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logInUser: (username, password, callback) => {\n      dispatch(logInUser(username, password, callback));\n    },\n    showNotification: (message, type) => {\n      dispatch(showNotification(message, type));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(login);","map":{"version":3,"sources":["E:\\sb-react-web-demo-appln\\react-web\\src\\components\\common\\login.js"],"names":["React","Component","Spinner","connect","store","logInUser","Link","PATH","showNotification","login","constructor","props","handleOnChange","e","target","name","value","setState","handleRemoveError","state","userName","password","error","userNameRef","current","classList","remove","passwordRef","handleValidate","focus","add","submit","console","log","isdisable","loginFunctions","result","history","push","token","createRef","componentDidMount","render","color","display","alignItems","justifyContent","REGISTRATION","propTypes","mapDispatchToProps","dispatch","username","callback","message","type"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Spinner } from \"react-activity\";\r\nimport \"react-activity/dist/react-activity.css\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"store\";\r\nimport { logInUser } from \"../../actions/userAction\";\r\nimport {Link} from 'react-router-dom';\r\nimport {PATH} from '../../utils/Constants'\r\nimport { showNotification } from \"../../actions/NotificationAction\";\r\n\r\nclass login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userName: \"ram\",\r\n      password: \"123\",\r\n      error: {\r\n        userName: \"\",\r\n        password: \"\"\r\n      },\r\n      token: {},\r\n      isdisable: false\r\n    };\r\n    this.userNameRef = React.createRef();\r\n    this.passwordRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  handleOnChange = e => {\r\n    let { target } = e;\r\n    let { name, value } = target;\r\n    this.setState({ [name]: value }, () => {\r\n      this.handleRemoveError();\r\n    });\r\n  };\r\n\r\n  handleRemoveError = () => {\r\n    let { userName, password, error } = this.state;\r\n    if (userName) {\r\n      this.userNameRef.current.classList.remove(\"error\");\r\n      error.userName = \"\";\r\n      this.setState({ error: error });\r\n    }\r\n    if (password) {\r\n      this.passwordRef.current.classList.remove(\"error\");\r\n      error.password = \"\";\r\n      this.setState({ error: error });\r\n    }\r\n  };\r\n\r\n  handleValidate = () => {\r\n    let { userName, password, error } = this.state;\r\n    if (!userName) {\r\n      this.userNameRef.current.focus();\r\n      this.userNameRef.current.classList.add(\"error\");\r\n      error.userName = \"Enter user name\";\r\n      this.setState({ error: error });\r\n      return false;\r\n    }\r\n    if (!password) {\r\n      this.passwordRef.current.focus();\r\n      this.passwordRef.current.classList.add(\"error\");\r\n      error.password = \"Enter Password\";\r\n      this.setState({ error: error });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  submit = () => {\r\n    console.log(this.state.userName, this.state.password);\r\n    let { userName, password } = this.state;\r\n    let submit = this.handleValidate();\r\n    if (submit) {\r\n      this.setState({ isdisable: true });\r\n      this.loginFunctions(userName, password);\r\n    }\r\n  };\r\n\r\n  loginFunctions = (userName, password) => {\r\n    this.props.logInUser(userName, password, result => {\r\n      console.log(result);\r\n      this.setState({ isdisable: false });\r\n      if (!result) {\r\n        this.props.showNotification(\"username or password wrong\", \"error\");\r\n      } else {\r\n        this.props.history.push(\"/dashboard\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"custom\">\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-10 col-sm-7 col-lg-5 login-bg-white login-sec\">\r\n              <h2 className=\"text-center\" style={{ color: \"#555\" }}>\r\n                ACCOUNT LOGIN\r\n              </h2>\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleInputEmail1\" style={{ color: \"#555\" }}>\r\n                  USERNAME\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  ref={this.userNameRef}\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputEmail1\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  // placeholder=\"enter username\"\r\n                  name=\"userName\"\r\n                  value={this.state.userName}\r\n                  onChange={e => {\r\n                    this.handleOnChange(e);\r\n                  }}\r\n                />\r\n                <p style={{ color: \"red\" }}>\r\n                  {this.state.error[\"userName\"]\r\n                    ? this.state.error[\"userName\"]\r\n                    : \"\"}\r\n                </p>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleInputPassword1\" style={{ color: \"#555\" }}>\r\n                  PASSWORD\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  class=\"form-control\"\r\n                  ref={this.passwordRef}\r\n                  id=\"exampleInputPassword1\"\r\n                  // placeholder=\"enter password\"\r\n                  name=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={e => {\r\n                    this.handleOnChange(e);\r\n                  }}\r\n                />\r\n                <p style={{ color: \"red\" }}>\r\n                  {this.state.error[\"password\"]\r\n                    ? this.state.error[\"password\"]\r\n                    : \"\"}\r\n                </p>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <button\r\n                  onClick={() => this.submit()}\r\n                  className=\"btn btn-primary mt-5 text-center login100-form-btn\"\r\n                  disabled={this.state.isdisable ? \"disabled\" : null}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\"\r\n                    }}\r\n                  >\r\n                    {this.state.isdisable ? <Spinner color=\"#FFF\" /> : null}\r\n                    Login\r\n                  </div>\r\n                </button>\r\n              </div>\r\n              <div className=\"text-center mt-3\">\r\n                <Link\r\n                  to={PATH.REGISTRATION}\r\n                >\r\n                  Signup  \r\n                </Link>  \r\n                | \r\n                <Link\r\n                  to={PATH.REGISTRATION}\r\n                >\r\n                  Forgot Password  \r\n                </Link>  \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlogin.propTypes = {};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logInUser: (username, password, callback) => {\r\n      dispatch(logInUser(username, password, callback));\r\n    },\r\n    showNotification: (message, type) => {\r\n      dispatch(showNotification(message, type));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(login);\r\n"]},"metadata":{},"sourceType":"module"}