{"ast":null,"code":"var _jsxFileName = \"E:\\\\sb-react-web-demo-appln\\\\react-web\\\\src\\\\components\\\\common\\\\registration.js\";\nimport React, { Component } from \"react\";\nimport { Spinner } from \"react-activity\";\nimport \"react-activity/dist/react-activity.css\";\nimport { connect } from \"react-redux\";\nimport store from \"store\";\nimport { logInUser, userRegistration } from \"../../actions/userAction\";\nimport { showNotification } from \"../../actions/NotificationAction\";\nimport { PATH } from \"../../utils/Constants\";\nimport { Link } from \"react-router-dom\";\n\nclass registration extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChange = e => {\n      let target = e.target;\n      let name = target.name,\n          value = target.value;\n\n      if (name === \"mobile\") {\n        value = value.replace(/[^0-9]/g, \"\");\n      }\n\n      this.setState({\n        [name]: value\n      }, () => {\n        this.handleRemoveError();\n      });\n    };\n\n    this.handleRemoveError = () => {\n      let _this$state = this.state,\n          userName = _this$state.userName,\n          password = _this$state.password,\n          error = _this$state.error,\n          confirmPassword = _this$state.confirmPassword,\n          email = _this$state.email,\n          name = _this$state.name,\n          mobile = _this$state.mobile;\n\n      if (userName) {\n        this.userNameRef.current.classList.remove(\"error\");\n        error.userName = \"\";\n        this.setState({\n          error: error\n        });\n      }\n\n      if (email) {\n        this.emailRef.current.classList.remove(\"error\");\n        error.email = \"\";\n        this.setState({\n          error: error\n        });\n      }\n\n      if (password) {\n        this.passwordRef.current.classList.remove(\"error\");\n        error.password = \"\";\n        this.setState({\n          error: error\n        });\n      }\n\n      if (confirmPassword) {\n        this.confirmPasswordRef.current.classList.remove(\"error\");\n        error.confirmPassword = \"\";\n        this.setState({\n          error: error\n        });\n      }\n\n      if (name) {\n        this.nameRef.current.classList.remove(\"error\");\n        error.name = \"\";\n        this.setState({\n          error: error\n        });\n      }\n\n      if (mobile) {\n        this.mobileRef.current.classList.remove(\"error\");\n        error.mobile = \"\";\n        this.setState({\n          error: error\n        });\n      }\n    };\n\n    this.handleValidate = () => {\n      let _this$state2 = this.state,\n          userName = _this$state2.userName,\n          password = _this$state2.password,\n          error = _this$state2.error,\n          confirmPassword = _this$state2.confirmPassword,\n          email = _this$state2.email,\n          name = _this$state2.name,\n          mobile = _this$state2.mobile;\n\n      if (!userName) {\n        this.userNameRef.current.focus();\n        this.userNameRef.current.classList.add(\"error\");\n        error.userName = \"Enter user name\";\n        this.setState({\n          error: error\n        });\n        return false;\n      }\n\n      if (!email || !email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n        this.emailRef.current.focus();\n        this.emailRef.current.classList.add(\"error\");\n        error.email = \"Enter Valid Email\";\n        this.setState({\n          error: error\n        });\n        return false;\n      }\n\n      if (!password) {\n        this.passwordRef.current.focus();\n        this.passwordRef.current.classList.add(\"error\");\n        error.password = \"Enter Password\";\n        this.setState({\n          error: error\n        });\n        return false;\n      }\n\n      if (!confirmPassword) {\n        this.confirmPasswordRef.current.focus();\n        this.confirmPasswordRef.current.classList.add(\"error\");\n        error.confirmPassword = \"Enter Confirm Password\";\n        this.setState({\n          error: error\n        });\n        return false;\n      }\n\n      if (confirmPassword !== password) {\n        this.confirmPasswordRef.current.focus();\n        this.confirmPasswordRef.current.classList.add(\"error\");\n        error.confirmPassword = \"Confirm Password and password mismatch\";\n        this.setState({\n          error: error\n        });\n        return false;\n      }\n\n      if (!name) {\n        this.nameRef.current.focus();\n        this.nameRef.current.classList.add(\"error\");\n        error.name = \"Enter name\";\n        this.setState({\n          error: error\n        });\n        return false;\n      }\n\n      if (!mobile) {\n        this.mobileRef.current.focus();\n        this.mobileRef.current.classList.add(\"error\");\n        error.mobile = \"Enter mobile\";\n        this.setState({\n          error: error\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.submit = () => {\n      console.log(this.state.userName, this.state.password);\n      let _this$state3 = this.state,\n          userName = _this$state3.userName,\n          password = _this$state3.password,\n          email = _this$state3.email,\n          confirmPassword = _this$state3.confirmPassword,\n          mobile = _this$state3.mobile,\n          name = _this$state3.name;\n      let inputObject = {\n        userName,\n        password,\n        email,\n        confirmPassword,\n        mobile,\n        name\n      };\n      let submit = this.handleValidate();\n\n      if (submit) {\n        this.setState({\n          isdisable: true\n        });\n        this.props.registration(inputObject, response => {\n          if (response && response.response_code == 0) {\n            this.setState({\n              isdisable: false\n            });\n            this.props.showNotification('sucessfully registered', 'success');\n            this.props.history.push('/');\n          }\n        });\n      }\n    };\n\n    this.state = {\n      userName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      email: \"\",\n      mobile: \"\",\n      name: \"\",\n      error: {\n        userName: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        email: \"\",\n        mobile: \"\",\n        name: \"\"\n      },\n      token: {},\n      isdisable: false\n    };\n    this.userNameRef = React.createRef();\n    this.passwordRef = React.createRef();\n    this.emailRef = React.createRef();\n    this.confirmPasswordRef = React.createRef();\n    this.mobileRef = React.createRef();\n    this.nameRef = React.createRef();\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"custom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-10 col-sm-7 col-lg-5 login-bg-white login-sec\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-center\",\n      style: {\n        color: \"#555\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"ACCOUNT REGISTRATION\"), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      style: {\n        color: \"#555\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"email\",\n      ref: this.userNameRef,\n      class: \"form-control\",\n      id: \"exampleInputEmail1\",\n      \"aria-describedby\": \"emailHelp\" // placeholder=\"enter username\"\n      ,\n      name: \"userName\",\n      value: this.state.userName,\n      onChange: e => {\n        this.handleOnChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, this.state.error[\"userName\"] ? this.state.error[\"userName\"] : \"\")), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail2\",\n      style: {\n        color: \"#555\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"email\",\n      ref: this.emailRef,\n      class: \"form-control\",\n      id: \"exampleInputEmail2\",\n      \"aria-describedby\": \"emailHelp\" // placeholder=\"enter username\"\n      ,\n      name: \"email\",\n      value: this.state.email,\n      onChange: e => {\n        this.handleOnChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, this.state.error[\"email\"] ? this.state.error[\"email\"] : \"\")), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputPassword1\",\n      style: {\n        color: \"#555\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      class: \"form-control\",\n      ref: this.passwordRef,\n      id: \"exampleInputPassword1\" // placeholder=\"enter password\"\n      ,\n      name: \"password\",\n      value: this.state.password,\n      onChange: e => {\n        this.handleOnChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, this.state.error[\"password\"] ? this.state.error[\"password\"] : \"\")), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputPassword1\",\n      style: {\n        color: \"#555\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      class: \"form-control\",\n      ref: this.confirmPasswordRef,\n      id: \"exampleInputPassword2\" // placeholder=\"enter password\"\n      ,\n      name: \"confirmPassword\",\n      value: this.state.confirmPassword,\n      onChange: e => {\n        this.handleOnChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, this.state.error[\"confirmPassword\"] ? this.state.error[\"confirmPassword\"] : \"\")), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputPassword1\",\n      style: {\n        color: \"#555\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"Full Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      ref: this.nameRef,\n      id: \"nameInput\" // placeholder=\"enter password\"\n      ,\n      name: \"name\",\n      value: this.state.name,\n      onChange: e => {\n        this.handleOnChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, this.state.error[\"name\"] ? this.state.error[\"name\"] : \"\")), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputPassword1\",\n      style: {\n        color: \"#555\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Mobile\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      ref: this.mobileRef,\n      id: \"exampleInputPassword2\" // placeholder=\"enter password\"\n      ,\n      name: \"mobile\",\n      pattern: \"[0-9]\",\n      maxLength: \"10\",\n      value: this.state.mobile,\n      onChange: e => {\n        this.handleOnChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, this.state.error[\"mobile\"] ? this.state.error[\"mobile\"] : \"\")), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.submit(),\n      className: \"btn btn-primary mt-5 text-center login100-form-btn\",\n      disabled: this.state.isdisable ? \"disabled\" : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, this.state.isdisable ? React.createElement(Spinner, {\n      color: \"#FFF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }) : null, \"Register\"))), React.createElement(\"div\", {\n      className: \"text-center mt-3 mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: PATH.INDEX,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, \"Back to signin\"))))));\n  }\n\n}\n\nregistration.propTypes = {};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logInUser: (username, password, callback) => {\n      dispatch(logInUser(username, password, callback));\n    },\n    registration: (inputObject, callback) => {\n      dispatch(userRegistration(inputObject, callback));\n    },\n    showNotification: (message, type) => {\n      dispatch(showNotification(message, type));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(registration);","map":{"version":3,"sources":["E:\\sb-react-web-demo-appln\\react-web\\src\\components\\common\\registration.js"],"names":["React","Component","Spinner","connect","store","logInUser","userRegistration","showNotification","PATH","Link","registration","constructor","props","handleOnChange","e","target","name","value","replace","setState","handleRemoveError","state","userName","password","error","confirmPassword","email","mobile","userNameRef","current","classList","remove","emailRef","passwordRef","confirmPasswordRef","nameRef","mobileRef","handleValidate","focus","add","match","submit","console","log","inputObject","isdisable","response","response_code","history","push","token","createRef","componentDidMount","render","color","display","alignItems","justifyContent","INDEX","propTypes","mapDispatchToProps","dispatch","username","callback","message","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAO,wCAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,gBAApB,QAA4C,0BAA5C;AACA,SAASC,gBAAT,QAAiC,kCAAjC;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,YAAN,SAA2BT,SAA3B,CAAqC;AACnCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA8BnBC,cA9BmB,GA8BFC,CAAC,IAAI;AAAA,UACdC,MADc,GACHD,CADG,CACdC,MADc;AAAA,UAEdC,IAFc,GAEED,MAFF,CAEdC,IAFc;AAAA,UAERC,KAFQ,GAEEF,MAFF,CAERE,KAFQ;;AAGpB,UAAID,IAAI,KAAK,QAAb,EAAuB;AACrBC,QAAAA,KAAK,GAAGA,KAAK,CAACC,OAAN,CAAc,SAAd,EAAyB,EAAzB,CAAR;AACD;;AACD,WAAKC,QAAL,CAAc;AAAE,SAACH,IAAD,GAAQC;AAAV,OAAd,EAAiC,MAAM;AACrC,aAAKG,iBAAL;AACD,OAFD;AAGD,KAvCkB;;AAAA,SAyCnBA,iBAzCmB,GAyCC,MAAM;AAAA,wBASpB,KAAKC,KATe;AAAA,UAEtBC,QAFsB,eAEtBA,QAFsB;AAAA,UAGtBC,QAHsB,eAGtBA,QAHsB;AAAA,UAItBC,KAJsB,eAItBA,KAJsB;AAAA,UAKtBC,eALsB,eAKtBA,eALsB;AAAA,UAMtBC,KANsB,eAMtBA,KANsB;AAAA,UAOtBV,IAPsB,eAOtBA,IAPsB;AAAA,UAQtBW,MARsB,eAQtBA,MARsB;;AAUxB,UAAIL,QAAJ,EAAc;AACZ,aAAKM,WAAL,CAAiBC,OAAjB,CAAyBC,SAAzB,CAAmCC,MAAnC,CAA0C,OAA1C;AACAP,QAAAA,KAAK,CAACF,QAAN,GAAiB,EAAjB;AACA,aAAKH,QAAL,CAAc;AAAEK,UAAAA,KAAK,EAAEA;AAAT,SAAd;AACD;;AACD,UAAIE,KAAJ,EAAW;AACT,aAAKM,QAAL,CAAcH,OAAd,CAAsBC,SAAtB,CAAgCC,MAAhC,CAAuC,OAAvC;AACAP,QAAAA,KAAK,CAACE,KAAN,GAAc,EAAd;AACA,aAAKP,QAAL,CAAc;AAAEK,UAAAA,KAAK,EAAEA;AAAT,SAAd;AACD;;AACD,UAAID,QAAJ,EAAc;AACZ,aAAKU,WAAL,CAAiBJ,OAAjB,CAAyBC,SAAzB,CAAmCC,MAAnC,CAA0C,OAA1C;AACAP,QAAAA,KAAK,CAACD,QAAN,GAAiB,EAAjB;AACA,aAAKJ,QAAL,CAAc;AAAEK,UAAAA,KAAK,EAAEA;AAAT,SAAd;AACD;;AACD,UAAIC,eAAJ,EAAqB;AACnB,aAAKS,kBAAL,CAAwBL,OAAxB,CAAgCC,SAAhC,CAA0CC,MAA1C,CAAiD,OAAjD;AACAP,QAAAA,KAAK,CAACC,eAAN,GAAwB,EAAxB;AACA,aAAKN,QAAL,CAAc;AAAEK,UAAAA,KAAK,EAAEA;AAAT,SAAd;AACD;;AACD,UAAIR,IAAJ,EAAU;AACR,aAAKmB,OAAL,CAAaN,OAAb,CAAqBC,SAArB,CAA+BC,MAA/B,CAAsC,OAAtC;AACAP,QAAAA,KAAK,CAACR,IAAN,GAAa,EAAb;AACA,aAAKG,QAAL,CAAc;AAAEK,UAAAA,KAAK,EAAEA;AAAT,SAAd;AACD;;AACD,UAAIG,MAAJ,EAAY;AACV,aAAKS,SAAL,CAAeP,OAAf,CAAuBC,SAAvB,CAAiCC,MAAjC,CAAwC,OAAxC;AACAP,QAAAA,KAAK,CAACG,MAAN,GAAe,EAAf;AACA,aAAKR,QAAL,CAAc;AAAEK,UAAAA,KAAK,EAAEA;AAAT,SAAd;AACD;AACF,KAjFkB;;AAAA,SAmFnBa,cAnFmB,GAmFF,MAAM;AAAA,yBASjB,KAAKhB,KATY;AAAA,UAEnBC,QAFmB,gBAEnBA,QAFmB;AAAA,UAGnBC,QAHmB,gBAGnBA,QAHmB;AAAA,UAInBC,KAJmB,gBAInBA,KAJmB;AAAA,UAKnBC,eALmB,gBAKnBA,eALmB;AAAA,UAMnBC,KANmB,gBAMnBA,KANmB;AAAA,UAOnBV,IAPmB,gBAOnBA,IAPmB;AAAA,UAQnBW,MARmB,gBAQnBA,MARmB;;AAUrB,UAAI,CAACL,QAAL,EAAe;AACb,aAAKM,WAAL,CAAiBC,OAAjB,CAAyBS,KAAzB;AACA,aAAKV,WAAL,CAAiBC,OAAjB,CAAyBC,SAAzB,CAAmCS,GAAnC,CAAuC,OAAvC;AACAf,QAAAA,KAAK,CAACF,QAAN,GAAiB,iBAAjB;AACA,aAAKH,QAAL,CAAc;AAAEK,UAAAA,KAAK,EAAEA;AAAT,SAAd;AACA,eAAO,KAAP;AACD;;AACD,UAAI,CAACE,KAAD,IAAU,CAACA,KAAK,CAACc,KAAN,CAAY,sCAAZ,CAAf,EAAoE;AAClE,aAAKR,QAAL,CAAcH,OAAd,CAAsBS,KAAtB;AACA,aAAKN,QAAL,CAAcH,OAAd,CAAsBC,SAAtB,CAAgCS,GAAhC,CAAoC,OAApC;AACAf,QAAAA,KAAK,CAACE,KAAN,GAAc,mBAAd;AACA,aAAKP,QAAL,CAAc;AAAEK,UAAAA,KAAK,EAAEA;AAAT,SAAd;AACA,eAAO,KAAP;AACD;;AACD,UAAI,CAACD,QAAL,EAAe;AACb,aAAKU,WAAL,CAAiBJ,OAAjB,CAAyBS,KAAzB;AACA,aAAKL,WAAL,CAAiBJ,OAAjB,CAAyBC,SAAzB,CAAmCS,GAAnC,CAAuC,OAAvC;AACAf,QAAAA,KAAK,CAACD,QAAN,GAAiB,gBAAjB;AACA,aAAKJ,QAAL,CAAc;AAAEK,UAAAA,KAAK,EAAEA;AAAT,SAAd;AACA,eAAO,KAAP;AACD;;AACD,UAAI,CAACC,eAAL,EAAsB;AACpB,aAAKS,kBAAL,CAAwBL,OAAxB,CAAgCS,KAAhC;AACA,aAAKJ,kBAAL,CAAwBL,OAAxB,CAAgCC,SAAhC,CAA0CS,GAA1C,CAA8C,OAA9C;AACAf,QAAAA,KAAK,CAACC,eAAN,GAAwB,wBAAxB;AACA,aAAKN,QAAL,CAAc;AAAEK,UAAAA,KAAK,EAAEA;AAAT,SAAd;AACA,eAAO,KAAP;AACD;;AACD,UAAIC,eAAe,KAAKF,QAAxB,EAAkC;AAChC,aAAKW,kBAAL,CAAwBL,OAAxB,CAAgCS,KAAhC;AACA,aAAKJ,kBAAL,CAAwBL,OAAxB,CAAgCC,SAAhC,CAA0CS,GAA1C,CAA8C,OAA9C;AACAf,QAAAA,KAAK,CAACC,eAAN,GAAwB,wCAAxB;AACA,aAAKN,QAAL,CAAc;AAAEK,UAAAA,KAAK,EAAEA;AAAT,SAAd;AACA,eAAO,KAAP;AACD;;AACD,UAAI,CAACR,IAAL,EAAW;AACT,aAAKmB,OAAL,CAAaN,OAAb,CAAqBS,KAArB;AACA,aAAKH,OAAL,CAAaN,OAAb,CAAqBC,SAArB,CAA+BS,GAA/B,CAAmC,OAAnC;AACAf,QAAAA,KAAK,CAACR,IAAN,GAAa,YAAb;AACA,aAAKG,QAAL,CAAc;AAAEK,UAAAA,KAAK,EAAEA;AAAT,SAAd;AACA,eAAO,KAAP;AACD;;AACD,UAAI,CAACG,MAAL,EAAa;AACX,aAAKS,SAAL,CAAeP,OAAf,CAAuBS,KAAvB;AACA,aAAKF,SAAL,CAAeP,OAAf,CAAuBC,SAAvB,CAAiCS,GAAjC,CAAqC,OAArC;AACAf,QAAAA,KAAK,CAACG,MAAN,GAAe,cAAf;AACA,aAAKR,QAAL,CAAc;AAAEK,UAAAA,KAAK,EAAEA;AAAT,SAAd;AACA,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD,KA/IkB;;AAAA,SAiJnBiB,MAjJmB,GAiJV,MAAM;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAL,CAAWC,QAAvB,EAAiC,KAAKD,KAAL,CAAWE,QAA5C;AADa,yBAST,KAAKF,KATI;AAAA,UAGXC,QAHW,gBAGXA,QAHW;AAAA,UAIXC,QAJW,gBAIXA,QAJW;AAAA,UAKXG,KALW,gBAKXA,KALW;AAAA,UAMXD,eANW,gBAMXA,eANW;AAAA,UAOXE,MAPW,gBAOXA,MAPW;AAAA,UAQXX,IARW,gBAQXA,IARW;AAUb,UAAI4B,WAAW,GAAG;AAChBtB,QAAAA,QADgB;AAEhBC,QAAAA,QAFgB;AAGhBG,QAAAA,KAHgB;AAIhBD,QAAAA,eAJgB;AAKhBE,QAAAA,MALgB;AAMhBX,QAAAA;AANgB,OAAlB;AAQA,UAAIyB,MAAM,GAAG,KAAKJ,cAAL,EAAb;;AACA,UAAII,MAAJ,EAAY;AACV,aAAKtB,QAAL,CAAc;AAAE0B,UAAAA,SAAS,EAAE;AAAb,SAAd;AACA,aAAKjC,KAAL,CAAWF,YAAX,CAAwBkC,WAAxB,EAAqCE,QAAQ,IAAI;AAC/C,cAAGA,QAAQ,IAAIA,QAAQ,CAACC,aAAT,IAA0B,CAAzC,EAA2C;AACzC,iBAAK5B,QAAL,CAAc;AAAC0B,cAAAA,SAAS,EAAG;AAAb,aAAd;AACA,iBAAKjC,KAAL,CAAWL,gBAAX,CAA4B,wBAA5B,EAAqD,SAArD;AACA,iBAAKK,KAAL,CAAWoC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;AACF,SAND;AAOD;AACF,KA9KkB;;AAEjB,SAAK5B,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXE,MAAAA,eAAe,EAAE,EAHN;AAIXC,MAAAA,KAAK,EAAE,EAJI;AAKXC,MAAAA,MAAM,EAAE,EALG;AAMXX,MAAAA,IAAI,EAAE,EANK;AAOXQ,MAAAA,KAAK,EAAE;AACLF,QAAAA,QAAQ,EAAE,EADL;AAELC,QAAAA,QAAQ,EAAE,EAFL;AAGLE,QAAAA,eAAe,EAAE,EAHZ;AAILC,QAAAA,KAAK,EAAE,EAJF;AAKLC,QAAAA,MAAM,EAAE,EALH;AAMLX,QAAAA,IAAI,EAAE;AAND,OAPI;AAeXkC,MAAAA,KAAK,EAAE,EAfI;AAgBXL,MAAAA,SAAS,EAAE;AAhBA,KAAb;AAkBA,SAAKjB,WAAL,GAAmB5B,KAAK,CAACmD,SAAN,EAAnB;AACA,SAAKlB,WAAL,GAAmBjC,KAAK,CAACmD,SAAN,EAAnB;AACA,SAAKnB,QAAL,GAAgBhC,KAAK,CAACmD,SAAN,EAAhB;AACA,SAAKjB,kBAAL,GAA0BlC,KAAK,CAACmD,SAAN,EAA1B;AACA,SAAKf,SAAL,GAAiBpC,KAAK,CAACmD,SAAN,EAAjB;AACA,SAAKhB,OAAL,GAAenC,KAAK,CAACmD,SAAN,EAAf;AACD;;AAEDC,EAAAA,iBAAiB,GAAG,CAAE;;AAoJtBC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,mDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAA4B,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAIE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,GAAG,EAAC,oBAAX;AAAgC,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,GAAG,EAAE,KAAK1B,WAFZ;AAGE,MAAA,KAAK,EAAC,cAHR;AAIE,MAAA,EAAE,EAAC,oBAJL;AAKE,0BAAiB,WALnB,CAME;AANF;AAOE,MAAA,IAAI,EAAC,UAPP;AAQE,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,QARpB;AASE,MAAA,QAAQ,EAAER,CAAC,IAAI;AACb,aAAKD,cAAL,CAAoBC,CAApB;AACD,OAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAiBE;AAAG,MAAA,KAAK,EAAE;AAAEwC,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKjC,KAAL,CAAWG,KAAX,CAAiB,UAAjB,IACG,KAAKH,KAAL,CAAWG,KAAX,CAAiB,UAAjB,CADH,GAEG,EAHN,CAjBF,CAJF,EA4BE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,GAAG,EAAC,oBAAX;AAAgC,MAAA,KAAK,EAAE;AAAE8B,QAAAA,KAAK,EAAE;AAAT,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAIE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,GAAG,EAAE,KAAKtB,QAFZ;AAGE,MAAA,KAAK,EAAC,cAHR;AAIE,MAAA,EAAE,EAAC,oBAJL;AAKE,0BAAiB,WALnB,CAME;AANF;AAOE,MAAA,IAAI,EAAC,OAPP;AAQE,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWK,KARpB;AASE,MAAA,QAAQ,EAAEZ,CAAC,IAAI;AACb,aAAKD,cAAL,CAAoBC,CAApB;AACD,OAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAiBE;AAAG,MAAA,KAAK,EAAE;AAAEwC,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKjC,KAAL,CAAWG,KAAX,CAAiB,OAAjB,IAA4B,KAAKH,KAAL,CAAWG,KAAX,CAAiB,OAAjB,CAA5B,GAAwD,EAD3D,CAjBF,CA5BF,EAkDE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,GAAG,EAAC,uBAAX;AAAmC,MAAA,KAAK,EAAE;AAAE8B,QAAAA,KAAK,EAAE;AAAT,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAC,cAFR;AAGE,MAAA,GAAG,EAAE,KAAKrB,WAHZ;AAIE,MAAA,EAAE,EAAC,uBAJL,CAKE;AALF;AAME,MAAA,IAAI,EAAC,UANP;AAOE,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWE,QAPpB;AAQE,MAAA,QAAQ,EAAET,CAAC,IAAI;AACb,aAAKD,cAAL,CAAoBC,CAApB;AACD,OAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAgBE;AAAG,MAAA,KAAK,EAAE;AAAEwC,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKjC,KAAL,CAAWG,KAAX,CAAiB,UAAjB,IACG,KAAKH,KAAL,CAAWG,KAAX,CAAiB,UAAjB,CADH,GAEG,EAHN,CAhBF,CAlDF,EAyEE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,GAAG,EAAC,uBAAX;AAAmC,MAAA,KAAK,EAAE;AAAE8B,QAAAA,KAAK,EAAE;AAAT,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAIE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAC,cAFR;AAGE,MAAA,GAAG,EAAE,KAAKpB,kBAHZ;AAIE,MAAA,EAAE,EAAC,uBAJL,CAKE;AALF;AAME,MAAA,IAAI,EAAC,iBANP;AAOE,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWI,eAPpB;AAQE,MAAA,QAAQ,EAAEX,CAAC,IAAI;AACb,aAAKD,cAAL,CAAoBC,CAApB;AACD,OAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAgBE;AAAG,MAAA,KAAK,EAAE;AAAEwC,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKjC,KAAL,CAAWG,KAAX,CAAiB,iBAAjB,IACG,KAAKH,KAAL,CAAWG,KAAX,CAAiB,iBAAjB,CADH,GAEG,EAHN,CAhBF,CAzEF,EAgGE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,GAAG,EAAC,uBAAX;AAAmC,MAAA,KAAK,EAAE;AAAE8B,QAAAA,KAAK,EAAE;AAAT,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAIE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAC,cAFR;AAGE,MAAA,GAAG,EAAE,KAAKnB,OAHZ;AAIE,MAAA,EAAE,EAAC,WAJL,CAKE;AALF;AAME,MAAA,IAAI,EAAC,MANP;AAOE,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWL,IAPpB;AAQE,MAAA,QAAQ,EAAEF,CAAC,IAAI;AACb,aAAKD,cAAL,CAAoBC,CAApB;AACD,OAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAgBE;AAAG,MAAA,KAAK,EAAE;AAAEwC,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKjC,KAAL,CAAWG,KAAX,CAAiB,MAAjB,IAA2B,KAAKH,KAAL,CAAWG,KAAX,CAAiB,MAAjB,CAA3B,GAAsD,EADzD,CAhBF,CAhGF,EAqHE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,GAAG,EAAC,uBAAX;AAAmC,MAAA,KAAK,EAAE;AAAE8B,QAAAA,KAAK,EAAE;AAAT,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAC,cAFR;AAGE,MAAA,GAAG,EAAE,KAAKlB,SAHZ;AAIE,MAAA,EAAE,EAAC,uBAJL,CAKE;AALF;AAME,MAAA,IAAI,EAAC,QANP;AAOE,MAAA,OAAO,EAAC,OAPV;AAQE,MAAA,SAAS,EAAC,IARZ;AASE,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWM,MATpB;AAUE,MAAA,QAAQ,EAAEb,CAAC,IAAI;AACb,aAAKD,cAAL,CAAoBC,CAApB;AACD,OAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAkBE;AAAG,MAAA,KAAK,EAAE;AAAEwC,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKjC,KAAL,CAAWG,KAAX,CAAiB,QAAjB,IAA6B,KAAKH,KAAL,CAAWG,KAAX,CAAiB,QAAjB,CAA7B,GAA0D,EAD7D,CAlBF,CArHF,EA4IE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,OAAO,EAAE,MAAM,KAAKiB,MAAL,EADjB;AAEE,MAAA,SAAS,EAAC,oDAFZ;AAGE,MAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWwB,SAAX,GAAuB,UAAvB,GAAoC,IAHhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AACE,MAAA,KAAK,EAAE;AACLU,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,UAAU,EAAE,QAFP;AAGLC,QAAAA,cAAc,EAAE;AAHX,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG,KAAKpC,KAAL,CAAWwB,SAAX,GAAuB,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvB,GAAkD,IAPrD,aALF,CADF,CA5IF,EA8JE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAErC,IAAI,CAACkD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CA9JF,CADF,CADF,CADF,CADF;AA0KD;;AA5VkC;;AA+VrChD,YAAY,CAACiD,SAAb,GAAyB,EAAzB;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLxD,IAAAA,SAAS,EAAE,CAACyD,QAAD,EAAWvC,QAAX,EAAqBwC,QAArB,KAAkC;AAC3CF,MAAAA,QAAQ,CAACxD,SAAS,CAACyD,QAAD,EAAWvC,QAAX,EAAqBwC,QAArB,CAAV,CAAR;AACD,KAHI;AAILrD,IAAAA,YAAY,EAAE,CAACkC,WAAD,EAAcmB,QAAd,KAA2B;AACvCF,MAAAA,QAAQ,CAACvD,gBAAgB,CAACsC,WAAD,EAAcmB,QAAd,CAAjB,CAAR;AACD,KANI;AAOLxD,IAAAA,gBAAgB,EAAE,CAACyD,OAAD,EAAUC,IAAV,KAAmB;AACnCJ,MAAAA,QAAQ,CAACtD,gBAAgB,CAACyD,OAAD,EAAUC,IAAV,CAAjB,CAAR;AACD;AATI,GAAP;AAWD,CAZD;;AAcA,eAAe9D,OAAO,CACpB,IADoB,EAEpByD,kBAFoB,CAAP,CAGblD,YAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Spinner } from \"react-activity\";\r\nimport \"react-activity/dist/react-activity.css\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"store\";\r\nimport { logInUser, userRegistration } from \"../../actions/userAction\";\r\nimport { showNotification } from \"../../actions/NotificationAction\";\r\nimport { PATH } from \"../../utils/Constants\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass registration extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      email: \"\",\r\n      mobile: \"\",\r\n      name: \"\",\r\n      error: {\r\n        userName: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        email: \"\",\r\n        mobile: \"\",\r\n        name: \"\"\r\n      },\r\n      token: {},\r\n      isdisable: false\r\n    };\r\n    this.userNameRef = React.createRef();\r\n    this.passwordRef = React.createRef();\r\n    this.emailRef = React.createRef();\r\n    this.confirmPasswordRef = React.createRef();\r\n    this.mobileRef = React.createRef();\r\n    this.nameRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  handleOnChange = e => {\r\n    let { target } = e;\r\n    let { name, value } = target;\r\n    if (name === \"mobile\") {\r\n      value = value.replace(/[^0-9]/g, \"\");\r\n    }\r\n    this.setState({ [name]: value }, () => {\r\n      this.handleRemoveError();\r\n    });\r\n  };\r\n\r\n  handleRemoveError = () => {\r\n    let {\r\n      userName,\r\n      password,\r\n      error,\r\n      confirmPassword,\r\n      email,\r\n      name,\r\n      mobile\r\n    } = this.state;\r\n    if (userName) {\r\n      this.userNameRef.current.classList.remove(\"error\");\r\n      error.userName = \"\";\r\n      this.setState({ error: error });\r\n    }\r\n    if (email) {\r\n      this.emailRef.current.classList.remove(\"error\");\r\n      error.email = \"\";\r\n      this.setState({ error: error });\r\n    }\r\n    if (password) {\r\n      this.passwordRef.current.classList.remove(\"error\");\r\n      error.password = \"\";\r\n      this.setState({ error: error });\r\n    }\r\n    if (confirmPassword) {\r\n      this.confirmPasswordRef.current.classList.remove(\"error\");\r\n      error.confirmPassword = \"\";\r\n      this.setState({ error: error });\r\n    }\r\n    if (name) {\r\n      this.nameRef.current.classList.remove(\"error\");\r\n      error.name = \"\";\r\n      this.setState({ error: error });\r\n    }\r\n    if (mobile) {\r\n      this.mobileRef.current.classList.remove(\"error\");\r\n      error.mobile = \"\";\r\n      this.setState({ error: error });\r\n    }\r\n  };\r\n\r\n  handleValidate = () => {\r\n    let {\r\n      userName,\r\n      password,\r\n      error,\r\n      confirmPassword,\r\n      email,\r\n      name,\r\n      mobile\r\n    } = this.state;\r\n    if (!userName) {\r\n      this.userNameRef.current.focus();\r\n      this.userNameRef.current.classList.add(\"error\");\r\n      error.userName = \"Enter user name\";\r\n      this.setState({ error: error });\r\n      return false;\r\n    }\r\n    if (!email || !email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\r\n      this.emailRef.current.focus();\r\n      this.emailRef.current.classList.add(\"error\");\r\n      error.email = \"Enter Valid Email\";\r\n      this.setState({ error: error });\r\n      return false;\r\n    }\r\n    if (!password) {\r\n      this.passwordRef.current.focus();\r\n      this.passwordRef.current.classList.add(\"error\");\r\n      error.password = \"Enter Password\";\r\n      this.setState({ error: error });\r\n      return false;\r\n    }\r\n    if (!confirmPassword) {\r\n      this.confirmPasswordRef.current.focus();\r\n      this.confirmPasswordRef.current.classList.add(\"error\");\r\n      error.confirmPassword = \"Enter Confirm Password\";\r\n      this.setState({ error: error });\r\n      return false;\r\n    }\r\n    if (confirmPassword !== password) {\r\n      this.confirmPasswordRef.current.focus();\r\n      this.confirmPasswordRef.current.classList.add(\"error\");\r\n      error.confirmPassword = \"Confirm Password and password mismatch\";\r\n      this.setState({ error: error });\r\n      return false;\r\n    }\r\n    if (!name) {\r\n      this.nameRef.current.focus();\r\n      this.nameRef.current.classList.add(\"error\");\r\n      error.name = \"Enter name\";\r\n      this.setState({ error: error });\r\n      return false;\r\n    }\r\n    if (!mobile) {\r\n      this.mobileRef.current.focus();\r\n      this.mobileRef.current.classList.add(\"error\");\r\n      error.mobile = \"Enter mobile\";\r\n      this.setState({ error: error });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  submit = () => {\r\n    console.log(this.state.userName, this.state.password);\r\n    let {\r\n      userName,\r\n      password,\r\n      email,\r\n      confirmPassword,\r\n      mobile,\r\n      name\r\n    } = this.state;\r\n    let inputObject = {\r\n      userName,\r\n      password,\r\n      email,\r\n      confirmPassword,\r\n      mobile,\r\n      name\r\n    };\r\n    let submit = this.handleValidate();\r\n    if (submit) {\r\n      this.setState({ isdisable: true });\r\n      this.props.registration(inputObject, response => {\r\n        if(response && response.response_code == 0){\r\n          this.setState({isdisable : false});\r\n          this.props.showNotification('sucessfully registered','success');\r\n          this.props.history.push('/');\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"custom\">\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-10 col-sm-7 col-lg-5 login-bg-white login-sec\">\r\n              <h2 className=\"text-center\" style={{ color: \"#555\" }}>\r\n                ACCOUNT REGISTRATION\r\n              </h2>\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleInputEmail1\" style={{ color: \"#555\" }}>\r\n                  Username\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  ref={this.userNameRef}\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputEmail1\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  // placeholder=\"enter username\"\r\n                  name=\"userName\"\r\n                  value={this.state.userName}\r\n                  onChange={e => {\r\n                    this.handleOnChange(e);\r\n                  }}\r\n                />\r\n                <p style={{ color: \"red\" }}>\r\n                  {this.state.error[\"userName\"]\r\n                    ? this.state.error[\"userName\"]\r\n                    : \"\"}\r\n                </p>\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleInputEmail2\" style={{ color: \"#555\" }}>\r\n                  Email\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  ref={this.emailRef}\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputEmail2\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  // placeholder=\"enter username\"\r\n                  name=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={e => {\r\n                    this.handleOnChange(e);\r\n                  }}\r\n                />\r\n                <p style={{ color: \"red\" }}>\r\n                  {this.state.error[\"email\"] ? this.state.error[\"email\"] : \"\"}\r\n                </p>\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleInputPassword1\" style={{ color: \"#555\" }}>\r\n                  Password\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  class=\"form-control\"\r\n                  ref={this.passwordRef}\r\n                  id=\"exampleInputPassword1\"\r\n                  // placeholder=\"enter password\"\r\n                  name=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={e => {\r\n                    this.handleOnChange(e);\r\n                  }}\r\n                />\r\n                <p style={{ color: \"red\" }}>\r\n                  {this.state.error[\"password\"]\r\n                    ? this.state.error[\"password\"]\r\n                    : \"\"}\r\n                </p>\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleInputPassword1\" style={{ color: \"#555\" }}>\r\n                  Confirm Password\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  class=\"form-control\"\r\n                  ref={this.confirmPasswordRef}\r\n                  id=\"exampleInputPassword2\"\r\n                  // placeholder=\"enter password\"\r\n                  name=\"confirmPassword\"\r\n                  value={this.state.confirmPassword}\r\n                  onChange={e => {\r\n                    this.handleOnChange(e);\r\n                  }}\r\n                />\r\n                <p style={{ color: \"red\" }}>\r\n                  {this.state.error[\"confirmPassword\"]\r\n                    ? this.state.error[\"confirmPassword\"]\r\n                    : \"\"}\r\n                </p>\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleInputPassword1\" style={{ color: \"#555\" }}>\r\n                  Full Name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  ref={this.nameRef}\r\n                  id=\"nameInput\"\r\n                  // placeholder=\"enter password\"\r\n                  name=\"name\"\r\n                  value={this.state.name}\r\n                  onChange={e => {\r\n                    this.handleOnChange(e);\r\n                  }}\r\n                />\r\n                <p style={{ color: \"red\" }}>\r\n                  {this.state.error[\"name\"] ? this.state.error[\"name\"] : \"\"}\r\n                </p>\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleInputPassword1\" style={{ color: \"#555\" }}>\r\n                  Mobile\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  ref={this.mobileRef}\r\n                  id=\"exampleInputPassword2\"\r\n                  // placeholder=\"enter password\"\r\n                  name=\"mobile\"\r\n                  pattern=\"[0-9]\"\r\n                  maxLength=\"10\"\r\n                  value={this.state.mobile}\r\n                  onChange={e => {\r\n                    this.handleOnChange(e);\r\n                  }}\r\n                />\r\n                <p style={{ color: \"red\" }}>\r\n                  {this.state.error[\"mobile\"] ? this.state.error[\"mobile\"] : \"\"}\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"text-center\">\r\n                <button\r\n                  onClick={() => this.submit()}\r\n                  className=\"btn btn-primary mt-5 text-center login100-form-btn\"\r\n                  disabled={this.state.isdisable ? \"disabled\" : null}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\"\r\n                    }}\r\n                  >\r\n                    {this.state.isdisable ? <Spinner color=\"#FFF\" /> : null}\r\n                    Register\r\n                  </div>\r\n                </button>\r\n              </div>\r\n              <div className=\"text-center mt-3 mb-3\">\r\n                <Link to={PATH.INDEX}>Back to signin</Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nregistration.propTypes = {};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logInUser: (username, password, callback) => {\r\n      dispatch(logInUser(username, password, callback));\r\n    },\r\n    registration: (inputObject, callback) => {\r\n      dispatch(userRegistration(inputObject, callback));\r\n    },\r\n    showNotification: (message, type) => {\r\n      dispatch(showNotification(message, type));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(registration);\r\n"]},"metadata":{},"sourceType":"module"}