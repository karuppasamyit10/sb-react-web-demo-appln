{"ast":null,"code":"import { ACTION_TYPES } from \"../utils/Constants\";\nimport _ from \"lodash\";\nimport store from \"store\";\nimport { axiosCommonInstance, axiosCommon } from \"../utils/client\";\nimport { clearNotifications } from \"react-notification-system\";\nimport URL from \"../utils/URL\";\nimport { myLog } from \"../utils/Utility\";\nimport Client from \"../utils/client\";\nexport function logInUser(username, password, callBack) {\n  const bodyFormData = new FormData();\n  bodyFormData.set(\"grant_type\", \"password\");\n  bodyFormData.set(\"username\", username);\n  bodyFormData.set(\"password\", password);\n  return function (dispatch) {\n    const config = {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Basic c2ItZGVtbzpzYi1kZW1vLXNlY3JldA==\",\n        \"Content-Type\": \"multipart/form-data\"\n      },\n      url: URL.OATHU,\n      data: bodyFormData\n    };\n    myLog(\"input\", config);\n    axiosCommon(config).then(response => {\n      myLog(\"====logInUser response===::::\", response);\n      let t = new Date();\n      const expiryTime = t.setSeconds(t.getSeconds() + 100000);\n      const expiryObj = {\n        expiry_time: expiryTime\n      }; // add expiry time to result object\n\n      _.assign(response.data, expiryObj);\n\n      store.set(\"userSession\", response.data);\n\n      if (response.data && response.data.refresh_token && response.data.expires_in) {\n        store.set(\"expiryTime\", Client.tokenExpires(response.data.expires_in));\n      }\n\n      callBack(response.data);\n      dispatch({\n        type: ACTION_TYPES.LOGIN_USER,\n        payload: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n      myLog(\"====logInUser error===????\", error);\n      callBack(false);\n    });\n  };\n}\nexport function logout(callback) {\n  return function (dispatch) {\n    Client.get(URL.LOGOUT, null, true).then(response => {\n      store.clearAll();\n      myLog(\"====logout response===::::\", response);\n      callback(response);\n      dispatch({\n        type: ACTION_TYPES.LOGOUT_USER,\n        payload: null\n      });\n    }).catch(error => {\n      myLog(\"====logout error===????\", error);\n    });\n  };\n}\nexport function registerCookie(callback) {\n  Client.get(URL.COOKIE, null, true).then(response => {\n    console.log(response);\n    myLog(\"====register cookie response===::::\", response);\n    callback(response);\n  }).catch(error => {\n    myLog(\"====register cookie response===????\", error);\n  });\n}\nexport function userRegistration(object, callback) {\n  return function (dispatch) {\n    Client.post(URL.REGISTRATION, object, true).then(response => {\n      myLog(\"====registration response===::::\", response);\n      callback(response);\n    }).catch(error => {\n      myLog(\"====registration error===????\", error);\n    });\n  };\n}\nexport function changeUploadStaus(value) {\n  console.log(value);\n  return function (dispatch) {\n    dispatch({\n      type: ACTION_TYPES.CHANGE_UPLOADING_STATUS,\n      payload: value\n    });\n  };\n}","map":{"version":3,"sources":["E:\\sb-react-web-demo-appln\\react-web\\src\\actions\\userAction.js"],"names":["ACTION_TYPES","_","store","axiosCommonInstance","axiosCommon","clearNotifications","URL","myLog","Client","logInUser","username","password","callBack","bodyFormData","FormData","set","dispatch","config","method","headers","Authorization","url","OATHU","data","then","response","t","Date","expiryTime","setSeconds","getSeconds","expiryObj","expiry_time","assign","refresh_token","expires_in","tokenExpires","type","LOGIN_USER","payload","catch","error","console","log","logout","callback","get","LOGOUT","clearAll","LOGOUT_USER","registerCookie","COOKIE","userRegistration","object","post","REGISTRATION","changeUploadStaus","value","CHANGE_UPLOADING_STATUS"],"mappings":"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","sourcesContent":["import { ACTION_TYPES } from \"../utils/Constants\";\r\nimport _ from \"lodash\";\r\nimport store from \"store\";\r\nimport { axiosCommonInstance, axiosCommon } from \"../utils/client\";\r\nimport { clearNotifications } from \"react-notification-system\";\r\nimport URL from \"../utils/URL\";\r\nimport { myLog } from \"../utils/Utility\";\r\nimport Client from \"../utils/client\";\r\n\r\nexport function logInUser(username, password, callBack) {\r\n  const bodyFormData = new FormData();\r\n  bodyFormData.set(\"grant_type\", \"password\");\r\n  bodyFormData.set(\"username\", username);\r\n  bodyFormData.set(\"password\", password);\r\n  return function(dispatch) {\r\n    const config = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: \"Basic c2ItZGVtbzpzYi1kZW1vLXNlY3JldA==\",\r\n        \"Content-Type\": \"multipart/form-data\"\r\n      },\r\n      url: URL.OATHU,\r\n      data: bodyFormData\r\n    };\r\n    myLog(\"input\", config);\r\n    axiosCommon(config)\r\n      .then(response => {\r\n        myLog(\"====logInUser response===::::\", response);\r\n        let t = new Date();\r\n        const expiryTime = t.setSeconds(t.getSeconds() + 100000);\r\n        const expiryObj = { expiry_time: expiryTime };\r\n        // add expiry time to result object\r\n        _.assign(response.data, expiryObj);\r\n        store.set(\"userSession\", response.data);\r\n        if (\r\n          response.data &&\r\n          response.data.refresh_token &&\r\n          response.data.expires_in\r\n        ) {\r\n          store.set(\r\n            \"expiryTime\",\r\n            Client.tokenExpires(response.data.expires_in)\r\n          );\r\n        }\r\n        callBack(response.data);\r\n        dispatch({\r\n          type: ACTION_TYPES.LOGIN_USER,\r\n          payload: response.data\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        myLog(\"====logInUser error===????\", error);\r\n        callBack(false);\r\n      });\r\n  };\r\n}\r\n\r\nexport function logout(callback) {\r\n  return function(dispatch) {\r\n    Client.get(URL.LOGOUT, null, true)\r\n      .then(response => {\r\n        store.clearAll();\r\n        myLog(\"====logout response===::::\", response);\r\n        callback(response);\r\n        dispatch({\r\n          type: ACTION_TYPES.LOGOUT_USER,\r\n          payload: null\r\n        });\r\n      })\r\n      .catch(error => {\r\n        myLog(\"====logout error===????\", error);\r\n      });\r\n  };\r\n}\r\n\r\nexport function registerCookie(callback) {\r\n  Client.get(URL.COOKIE, null, true)\r\n    .then(response => {\r\n      console.log(response);\r\n      myLog(\"====register cookie response===::::\", response);\r\n      callback(response);\r\n    })\r\n    .catch(error => {\r\n      myLog(\"====register cookie response===????\", error);\r\n    });\r\n}\r\n\r\nexport function userRegistration(object, callback) {\r\n  return function(dispatch) {\r\n    Client.post(URL.REGISTRATION, object, true)\r\n      .then(response => {\r\n        myLog(\"====registration response===::::\", response);\r\n        callback(response);\r\n      })\r\n      .catch(error => {\r\n        myLog(\"====registration error===????\", error);\r\n      });\r\n  };\r\n}\r\n\r\nexport function changeUploadStaus(value) {\r\n  console.log(value);\r\n  return function(dispatch) {\r\n    dispatch({\r\n      type: ACTION_TYPES.CHANGE_UPLOADING_STATUS,\r\n      payload: value\r\n    });\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}