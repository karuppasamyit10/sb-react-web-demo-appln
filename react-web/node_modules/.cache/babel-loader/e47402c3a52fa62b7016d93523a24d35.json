{"ast":null,"code":"import _defineProperty from \"E:\\\\sb-react-web-demo-appln\\\\react-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ACTION_TYPES } from '../utils/Constants';\n\nconst notificationReducer = (state = {\n  notificationDetails: {}\n}, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.SHOW_NOTIFICATION:\n      state = _objectSpread({}, state, {\n        notificationDetails: action.payload\n      });\n      break;\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default notificationReducer;","map":{"version":3,"sources":["E:\\sb-react-web-demo-appln\\react-web\\src\\reducers\\NotificationReducer.js"],"names":["ACTION_TYPES","notificationReducer","state","notificationDetails","action","type","SHOW_NOTIFICATION","payload"],"mappings":";;;;;;AAAA,SAASA,YAAT,QAA6B,oBAA7B;;AAEA,MAAMC,mBAAmB,GAAG,CAACC,KAAK,GAAG;AACnCC,EAAAA,mBAAmB,EAAE;AADc,CAAT,EAEzBC,MAFyB,KAEf;AACX,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,YAAY,CAACM,iBAAlB;AACEJ,MAAAA,KAAK,qBACAA,KADA;AAEHC,QAAAA,mBAAmB,EAAEC,MAAM,CAACG;AAFzB,QAAL;AAIA;;AACF;AACE;AARJ;;AAUA,SAAOL,KAAP;AACD,CAdD;;AAeA,eAAeD,mBAAf","sourcesContent":["import { ACTION_TYPES } from '../utils/Constants';\r\n\r\nconst notificationReducer = (state = {\r\n  notificationDetails: {},\r\n}, action)=> {    \r\n  switch (action.type) {\r\n    case ACTION_TYPES.SHOW_NOTIFICATION:\r\n      state = {\r\n        ...state,\r\n        notificationDetails: action.payload,\r\n      };\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\nexport default notificationReducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}